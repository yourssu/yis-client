/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/~__root'
import { Route as SignImport } from './routes/~_sign'
import { Route as AuthImport } from './routes/~_auth'
import { Route as R404Import } from './routes/~404'
import { Route as AuthAdminImport } from './routes/~_auth/~admin'
import { Route as AuthindexIndexImport } from './routes/~_auth/~(index)/~index'
import { Route as AuthApplicationApplicationIdIndexImport } from './routes/~_auth/~application/~$applicationId/~index'
import { Route as AuthAdminRequestsIndexImport } from './routes/~_auth/~admin/~requests/~index'

// Create Virtual Routes

const SignSignupIndexLazyImport = createFileRoute('/_sign/signup/')()
const SignSigninIndexLazyImport = createFileRoute('/_sign/signin/')()
const AuthProfileIndexLazyImport = createFileRoute('/_auth/profile/')()
const AuthAdminUsersIndexLazyImport = createFileRoute('/_auth/admin/users/')()
const AuthAdminApplicationsIndexLazyImport = createFileRoute(
  '/_auth/admin/applications/',
)()

// Create/Update Routes

const SignRoute = SignImport.update({
  id: '/_sign',
  getParentRoute: () => rootRoute,
} as any)

const AuthRoute = AuthImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any)

const R404Route = R404Import.update({
  id: '/404',
  path: '/404',
  getParentRoute: () => rootRoute,
} as any)

const AuthAdminRoute = AuthAdminImport.update({
  id: '/admin',
  path: '/admin',
  getParentRoute: () => AuthRoute,
} as any)

const SignSignupIndexLazyRoute = SignSignupIndexLazyImport.update({
  id: '/signup/',
  path: '/signup/',
  getParentRoute: () => SignRoute,
} as any).lazy(() =>
  import('./routes/~_sign/~signup/~index.lazy').then((d) => d.Route),
)

const SignSigninIndexLazyRoute = SignSigninIndexLazyImport.update({
  id: '/signin/',
  path: '/signin/',
  getParentRoute: () => SignRoute,
} as any).lazy(() =>
  import('./routes/~_sign/~signin/~index.lazy').then((d) => d.Route),
)

const AuthProfileIndexLazyRoute = AuthProfileIndexLazyImport.update({
  id: '/profile/',
  path: '/profile/',
  getParentRoute: () => AuthRoute,
} as any).lazy(() =>
  import('./routes/~_auth/~profile/~index.lazy').then((d) => d.Route),
)

const AuthindexIndexRoute = AuthindexIndexImport.update({
  id: '/(index)/',
  path: '/',
  getParentRoute: () => AuthRoute,
} as any)

const AuthAdminUsersIndexLazyRoute = AuthAdminUsersIndexLazyImport.update({
  id: '/users/',
  path: '/users/',
  getParentRoute: () => AuthAdminRoute,
} as any).lazy(() =>
  import('./routes/~_auth/~admin/~users/~index.lazy').then((d) => d.Route),
)

const AuthAdminApplicationsIndexLazyRoute =
  AuthAdminApplicationsIndexLazyImport.update({
    id: '/applications/',
    path: '/applications/',
    getParentRoute: () => AuthAdminRoute,
  } as any).lazy(() =>
    import('./routes/~_auth/~admin/~applications/~index.lazy').then(
      (d) => d.Route,
    ),
  )

const AuthApplicationApplicationIdIndexRoute =
  AuthApplicationApplicationIdIndexImport.update({
    id: '/application/$applicationId/',
    path: '/application/$applicationId/',
    getParentRoute: () => AuthRoute,
  } as any).lazy(() =>
    import('./routes/~_auth/~application/~$applicationId/~index.lazy').then(
      (d) => d.Route,
    ),
  )

const AuthAdminRequestsIndexRoute = AuthAdminRequestsIndexImport.update({
  id: '/requests/',
  path: '/requests/',
  getParentRoute: () => AuthAdminRoute,
} as any).lazy(() =>
  import('./routes/~_auth/~admin/~requests/~index.lazy').then((d) => d.Route),
)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/404': {
      id: '/404'
      path: '/404'
      fullPath: '/404'
      preLoaderRoute: typeof R404Import
      parentRoute: typeof rootRoute
    }
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/_sign': {
      id: '/_sign'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof SignImport
      parentRoute: typeof rootRoute
    }
    '/_auth/admin': {
      id: '/_auth/admin'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AuthAdminImport
      parentRoute: typeof AuthImport
    }
    '/_auth/(index)/': {
      id: '/_auth/(index)/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthindexIndexImport
      parentRoute: typeof AuthImport
    }
    '/_auth/profile/': {
      id: '/_auth/profile/'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof AuthProfileIndexLazyImport
      parentRoute: typeof AuthImport
    }
    '/_sign/signin/': {
      id: '/_sign/signin/'
      path: '/signin'
      fullPath: '/signin'
      preLoaderRoute: typeof SignSigninIndexLazyImport
      parentRoute: typeof SignImport
    }
    '/_sign/signup/': {
      id: '/_sign/signup/'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof SignSignupIndexLazyImport
      parentRoute: typeof SignImport
    }
    '/_auth/admin/requests/': {
      id: '/_auth/admin/requests/'
      path: '/requests'
      fullPath: '/admin/requests'
      preLoaderRoute: typeof AuthAdminRequestsIndexImport
      parentRoute: typeof AuthAdminImport
    }
    '/_auth/application/$applicationId/': {
      id: '/_auth/application/$applicationId/'
      path: '/application/$applicationId'
      fullPath: '/application/$applicationId'
      preLoaderRoute: typeof AuthApplicationApplicationIdIndexImport
      parentRoute: typeof AuthImport
    }
    '/_auth/admin/applications/': {
      id: '/_auth/admin/applications/'
      path: '/applications'
      fullPath: '/admin/applications'
      preLoaderRoute: typeof AuthAdminApplicationsIndexLazyImport
      parentRoute: typeof AuthAdminImport
    }
    '/_auth/admin/users/': {
      id: '/_auth/admin/users/'
      path: '/users'
      fullPath: '/admin/users'
      preLoaderRoute: typeof AuthAdminUsersIndexLazyImport
      parentRoute: typeof AuthAdminImport
    }
  }
}

// Create and export the route tree

interface AuthAdminRouteChildren {
  AuthAdminRequestsIndexRoute: typeof AuthAdminRequestsIndexRoute
  AuthAdminApplicationsIndexLazyRoute: typeof AuthAdminApplicationsIndexLazyRoute
  AuthAdminUsersIndexLazyRoute: typeof AuthAdminUsersIndexLazyRoute
}

const AuthAdminRouteChildren: AuthAdminRouteChildren = {
  AuthAdminRequestsIndexRoute: AuthAdminRequestsIndexRoute,
  AuthAdminApplicationsIndexLazyRoute: AuthAdminApplicationsIndexLazyRoute,
  AuthAdminUsersIndexLazyRoute: AuthAdminUsersIndexLazyRoute,
}

const AuthAdminRouteWithChildren = AuthAdminRoute._addFileChildren(
  AuthAdminRouteChildren,
)

interface AuthRouteChildren {
  AuthAdminRoute: typeof AuthAdminRouteWithChildren
  AuthindexIndexRoute: typeof AuthindexIndexRoute
  AuthProfileIndexLazyRoute: typeof AuthProfileIndexLazyRoute
  AuthApplicationApplicationIdIndexRoute: typeof AuthApplicationApplicationIdIndexRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthAdminRoute: AuthAdminRouteWithChildren,
  AuthindexIndexRoute: AuthindexIndexRoute,
  AuthProfileIndexLazyRoute: AuthProfileIndexLazyRoute,
  AuthApplicationApplicationIdIndexRoute:
    AuthApplicationApplicationIdIndexRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

interface SignRouteChildren {
  SignSigninIndexLazyRoute: typeof SignSigninIndexLazyRoute
  SignSignupIndexLazyRoute: typeof SignSignupIndexLazyRoute
}

const SignRouteChildren: SignRouteChildren = {
  SignSigninIndexLazyRoute: SignSigninIndexLazyRoute,
  SignSignupIndexLazyRoute: SignSignupIndexLazyRoute,
}

const SignRouteWithChildren = SignRoute._addFileChildren(SignRouteChildren)

export interface FileRoutesByFullPath {
  '/404': typeof R404Route
  '': typeof SignRouteWithChildren
  '/admin': typeof AuthAdminRouteWithChildren
  '/': typeof AuthindexIndexRoute
  '/profile': typeof AuthProfileIndexLazyRoute
  '/signin': typeof SignSigninIndexLazyRoute
  '/signup': typeof SignSignupIndexLazyRoute
  '/admin/requests': typeof AuthAdminRequestsIndexRoute
  '/application/$applicationId': typeof AuthApplicationApplicationIdIndexRoute
  '/admin/applications': typeof AuthAdminApplicationsIndexLazyRoute
  '/admin/users': typeof AuthAdminUsersIndexLazyRoute
}

export interface FileRoutesByTo {
  '/404': typeof R404Route
  '': typeof SignRouteWithChildren
  '/admin': typeof AuthAdminRouteWithChildren
  '/': typeof AuthindexIndexRoute
  '/profile': typeof AuthProfileIndexLazyRoute
  '/signin': typeof SignSigninIndexLazyRoute
  '/signup': typeof SignSignupIndexLazyRoute
  '/admin/requests': typeof AuthAdminRequestsIndexRoute
  '/application/$applicationId': typeof AuthApplicationApplicationIdIndexRoute
  '/admin/applications': typeof AuthAdminApplicationsIndexLazyRoute
  '/admin/users': typeof AuthAdminUsersIndexLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/404': typeof R404Route
  '/_auth': typeof AuthRouteWithChildren
  '/_sign': typeof SignRouteWithChildren
  '/_auth/admin': typeof AuthAdminRouteWithChildren
  '/_auth/(index)/': typeof AuthindexIndexRoute
  '/_auth/profile/': typeof AuthProfileIndexLazyRoute
  '/_sign/signin/': typeof SignSigninIndexLazyRoute
  '/_sign/signup/': typeof SignSignupIndexLazyRoute
  '/_auth/admin/requests/': typeof AuthAdminRequestsIndexRoute
  '/_auth/application/$applicationId/': typeof AuthApplicationApplicationIdIndexRoute
  '/_auth/admin/applications/': typeof AuthAdminApplicationsIndexLazyRoute
  '/_auth/admin/users/': typeof AuthAdminUsersIndexLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/404'
    | ''
    | '/admin'
    | '/'
    | '/profile'
    | '/signin'
    | '/signup'
    | '/admin/requests'
    | '/application/$applicationId'
    | '/admin/applications'
    | '/admin/users'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/404'
    | ''
    | '/admin'
    | '/'
    | '/profile'
    | '/signin'
    | '/signup'
    | '/admin/requests'
    | '/application/$applicationId'
    | '/admin/applications'
    | '/admin/users'
  id:
    | '__root__'
    | '/404'
    | '/_auth'
    | '/_sign'
    | '/_auth/admin'
    | '/_auth/(index)/'
    | '/_auth/profile/'
    | '/_sign/signin/'
    | '/_sign/signup/'
    | '/_auth/admin/requests/'
    | '/_auth/application/$applicationId/'
    | '/_auth/admin/applications/'
    | '/_auth/admin/users/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  R404Route: typeof R404Route
  AuthRoute: typeof AuthRouteWithChildren
  SignRoute: typeof SignRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  R404Route: R404Route,
  AuthRoute: AuthRouteWithChildren,
  SignRoute: SignRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "~__root.tsx",
      "children": [
        "/404",
        "/_auth",
        "/_sign"
      ]
    },
    "/404": {
      "filePath": "~404.tsx"
    },
    "/_auth": {
      "filePath": "~_auth.tsx",
      "children": [
        "/_auth/admin",
        "/_auth/(index)/",
        "/_auth/profile/",
        "/_auth/application/$applicationId/"
      ]
    },
    "/_sign": {
      "filePath": "~_sign.tsx",
      "children": [
        "/_sign/signin/",
        "/_sign/signup/"
      ]
    },
    "/_auth/admin": {
      "filePath": "~_auth/~admin.tsx",
      "parent": "/_auth",
      "children": [
        "/_auth/admin/requests/",
        "/_auth/admin/applications/",
        "/_auth/admin/users/"
      ]
    },
    "/_auth/(index)/": {
      "filePath": "~_auth/~(index)/~index.tsx",
      "parent": "/_auth"
    },
    "/_auth/profile/": {
      "filePath": "~_auth/~profile/~index.lazy.tsx",
      "parent": "/_auth"
    },
    "/_sign/signin/": {
      "filePath": "~_sign/~signin/~index.lazy.tsx",
      "parent": "/_sign"
    },
    "/_sign/signup/": {
      "filePath": "~_sign/~signup/~index.lazy.tsx",
      "parent": "/_sign"
    },
    "/_auth/admin/requests/": {
      "filePath": "~_auth/~admin/~requests/~index.tsx",
      "parent": "/_auth/admin"
    },
    "/_auth/application/$applicationId/": {
      "filePath": "~_auth/~application/~$applicationId/~index.tsx",
      "parent": "/_auth"
    },
    "/_auth/admin/applications/": {
      "filePath": "~_auth/~admin/~applications/~index.lazy.tsx",
      "parent": "/_auth/admin"
    },
    "/_auth/admin/users/": {
      "filePath": "~_auth/~admin/~users/~index.lazy.tsx",
      "parent": "/_auth/admin"
    }
  }
}
ROUTE_MANIFEST_END */
