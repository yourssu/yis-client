/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/~__root'
import { Route as SignImport } from './routes/~_sign'
import { Route as AuthImport } from './routes/~_auth'
import { Route as AuthindexIndexImport } from './routes/~_auth/~(index)/~index'

// Create Virtual Routes

const SignSignupIndexLazyImport = createFileRoute('/_sign/signup/')()
const SignSigninIndexLazyImport = createFileRoute('/_sign/signin/')()
const AuthProfileIndexLazyImport = createFileRoute('/_auth/profile/')()

// Create/Update Routes

const SignRoute = SignImport.update({
  id: '/_sign',
  getParentRoute: () => rootRoute,
} as any)

const AuthRoute = AuthImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any)

const SignSignupIndexLazyRoute = SignSignupIndexLazyImport.update({
  id: '/signup/',
  path: '/signup/',
  getParentRoute: () => SignRoute,
} as any).lazy(() =>
  import('./routes/~_sign/~signup/~index.lazy').then((d) => d.Route),
)

const SignSigninIndexLazyRoute = SignSigninIndexLazyImport.update({
  id: '/signin/',
  path: '/signin/',
  getParentRoute: () => SignRoute,
} as any).lazy(() =>
  import('./routes/~_sign/~signin/~index.lazy').then((d) => d.Route),
)

const AuthProfileIndexLazyRoute = AuthProfileIndexLazyImport.update({
  id: '/profile/',
  path: '/profile/',
  getParentRoute: () => AuthRoute,
} as any).lazy(() =>
  import('./routes/~_auth/~profile/~index.lazy').then((d) => d.Route),
)

const AuthindexIndexRoute = AuthindexIndexImport.update({
  id: '/(index)/',
  path: '/',
  getParentRoute: () => AuthRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/_sign': {
      id: '/_sign'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof SignImport
      parentRoute: typeof rootRoute
    }
    '/_auth/(index)/': {
      id: '/_auth/(index)/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthindexIndexImport
      parentRoute: typeof AuthImport
    }
    '/_auth/profile/': {
      id: '/_auth/profile/'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof AuthProfileIndexLazyImport
      parentRoute: typeof AuthImport
    }
    '/_sign/signin/': {
      id: '/_sign/signin/'
      path: '/signin'
      fullPath: '/signin'
      preLoaderRoute: typeof SignSigninIndexLazyImport
      parentRoute: typeof SignImport
    }
    '/_sign/signup/': {
      id: '/_sign/signup/'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof SignSignupIndexLazyImport
      parentRoute: typeof SignImport
    }
  }
}

// Create and export the route tree

interface AuthRouteChildren {
  AuthindexIndexRoute: typeof AuthindexIndexRoute
  AuthProfileIndexLazyRoute: typeof AuthProfileIndexLazyRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthindexIndexRoute: AuthindexIndexRoute,
  AuthProfileIndexLazyRoute: AuthProfileIndexLazyRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

interface SignRouteChildren {
  SignSigninIndexLazyRoute: typeof SignSigninIndexLazyRoute
  SignSignupIndexLazyRoute: typeof SignSignupIndexLazyRoute
}

const SignRouteChildren: SignRouteChildren = {
  SignSigninIndexLazyRoute: SignSigninIndexLazyRoute,
  SignSignupIndexLazyRoute: SignSignupIndexLazyRoute,
}

const SignRouteWithChildren = SignRoute._addFileChildren(SignRouteChildren)

export interface FileRoutesByFullPath {
  '': typeof SignRouteWithChildren
  '/': typeof AuthindexIndexRoute
  '/profile': typeof AuthProfileIndexLazyRoute
  '/signin': typeof SignSigninIndexLazyRoute
  '/signup': typeof SignSignupIndexLazyRoute
}

export interface FileRoutesByTo {
  '': typeof SignRouteWithChildren
  '/': typeof AuthindexIndexRoute
  '/profile': typeof AuthProfileIndexLazyRoute
  '/signin': typeof SignSigninIndexLazyRoute
  '/signup': typeof SignSignupIndexLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_auth': typeof AuthRouteWithChildren
  '/_sign': typeof SignRouteWithChildren
  '/_auth/(index)/': typeof AuthindexIndexRoute
  '/_auth/profile/': typeof AuthProfileIndexLazyRoute
  '/_sign/signin/': typeof SignSigninIndexLazyRoute
  '/_sign/signup/': typeof SignSignupIndexLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '' | '/' | '/profile' | '/signin' | '/signup'
  fileRoutesByTo: FileRoutesByTo
  to: '' | '/' | '/profile' | '/signin' | '/signup'
  id:
    | '__root__'
    | '/_auth'
    | '/_sign'
    | '/_auth/(index)/'
    | '/_auth/profile/'
    | '/_sign/signin/'
    | '/_sign/signup/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AuthRoute: typeof AuthRouteWithChildren
  SignRoute: typeof SignRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  AuthRoute: AuthRouteWithChildren,
  SignRoute: SignRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "~__root.tsx",
      "children": [
        "/_auth",
        "/_sign"
      ]
    },
    "/_auth": {
      "filePath": "~_auth.tsx",
      "children": [
        "/_auth/(index)/",
        "/_auth/profile/"
      ]
    },
    "/_sign": {
      "filePath": "~_sign.tsx",
      "children": [
        "/_sign/signin/",
        "/_sign/signup/"
      ]
    },
    "/_auth/(index)/": {
      "filePath": "~_auth/~(index)/~index.tsx",
      "parent": "/_auth"
    },
    "/_auth/profile/": {
      "filePath": "~_auth/~profile/~index.lazy.tsx",
      "parent": "/_auth"
    },
    "/_sign/signin/": {
      "filePath": "~_sign/~signin/~index.lazy.tsx",
      "parent": "/_sign"
    },
    "/_sign/signup/": {
      "filePath": "~_sign/~signup/~index.lazy.tsx",
      "parent": "/_sign"
    }
  }
}
ROUTE_MANIFEST_END */
